#!/bin/bash
set -euo pipefail

{
NAME="$1"
shift

	set -x
PROJECT="${PROJECT:-$(gcloud config get-value project)}"
email="${NAME}@${PROJECT}.iam.gserviceaccount.com"
NO_SERVICE_KEY="${NO_SERVICE_KEY:-""}"

if ! gcloud iam service-accounts describe "${email}" 2>/dev/null ; then
  gcloud iam service-accounts create --display-name "${NAME}" "${NAME}"
  if ! gcloud iam service-accounts describe "${email}" ; then
	echo "sa account creation error" >&2
	exit 1
  fi
fi

while test ${#} -gt 0
do
  # how to test for this?
  gcloud projects add-iam-policy-binding "${PROJECT}" \
    --member "serviceAccount:${email}" --role "$1"
  shift
done

if [[ -z $NO_SERVICE_KEY ]] ; then
  NAMESPACE="${NAMESPACE-"default"}"
  if ! kubectl get namespace "$NAMESPACE" 2>/dev/null ; then
    kubectl create namespace "$NAMESPACE"
    if ! kubectl get namespace "$NAMESPACE" ; then
      echo "k8s namespace error" >&2
      exit 1
    fi
  fi
  KUBECTL="kubectl -n ${NAMESPACE}"

  if ! $KUBECTL get secret "${NAME}-key" ; then
    gcloud iam service-accounts keys create key.json --iam-account "${email}"
    if ! [[ $(gcloud iam service-accounts keys list --iam-account "${email}" | wc -l ) -gt 2 ]]; then
       echo "sa key creation error" >&2
       exit 1
    fi
    $KUBECTL create secret generic "${NAME}-key" --from-file=key.json
    rm key.json
  fi
fi
} >/dev/null
echo "$email"
