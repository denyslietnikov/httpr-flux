---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.28.0 (c4137012e)
  labels:
    io.kompose.service: jaeger
  name: jaeger
  namespace: httpr
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.28.0 (c4137012e)
      labels:
        io.kompose.network/otel-default: "true"
        io.kompose.service: jaeger
    spec:
      containers:
        - args:
            - --query.ui-config
            - /etc/jaeger/jaeger-ui.json
            - --sampling.strategies-file=/etc/jaeger/strategie/sampling_strategies.json
          image: jaegertracing/all-in-one:latest
          name: jaeger
          ports:
            - containerPort: 14250
            - containerPort: 14268
            - containerPort: 6831
              protocol: UDP
            - containerPort: 16686
            - containerPort: 16685
          resources: {}
          volumeMounts:
            - mountPath: /etc/jaeger
              name: jaeger-ui
            - mountPath: /etc/jaeger/strategie
              name: sampling-strategies
      restartPolicy: Always
      volumes:
        - name: jaeger-ui
          configMap:
            name: jaeger-ui
        - name: sampling-strategies
          configMap:
            name: sampling-strategies
status: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.28.0 (c4137012e)
  labels:
    io.kompose.service: jaeger
  name: jaeger
  namespace: httpr
spec:
  ports:
    - name: "14250"
      port: 14250
      targetPort: 14250
    - name: "14268"
      port: 14268
      targetPort: 14268
    - name: "6831"
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: "16686"
      port: 16686
      targetPort: 16686
    - name: "16685"
      port: 16685
      targetPort: 16685
  selector:
    io.kompose.service: jaeger
status:
  loadBalancer: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-ui
  namespace: httpr
data:
  jaeger-ui.json: |
   {
     "monitor": {
       "menuEnabled": true
     },
     "dependencies": {
       "menuEnabled": true
     }
   }
   
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sampling-strategies
  namespace: httpr
data:
  sampling_strategies.json: |
   {
     "default_strategy": {
       "type": "probabilistic",
       "param": 1
      }
   }